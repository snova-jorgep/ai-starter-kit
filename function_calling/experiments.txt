Sample questions

- Describe the database
- Provide a quick profiling of the data in Customers table
- Which card has the customer called "Németh Anikó"
- Which account has the customer called "Kiss Mária" 
- How many customers have Visa Online card?
- How many customers have Smart account?
- How many customers have Mastercard Gold card with Smart account?
- Add a new card called American Express to the db
- Add a new customer called "Tilinger Béla" who is 40 years old
- In the db, modify customer "Tilinger Béla". Reassign card id to 5
- Which card the customer "Tilinger Béla" has?
- Delete customer "Tilinger Béla".
- Is there a customer called "Tilinger Béla"?
- In the db, change the account of all customers with age greater than 35 to accountId 5


complex analysis soso bad execution to add song or modify bela card or change al registers to mastercard >40:

    PROMPT:
        """you are an helpful assistant and you have access to the following tools:

        {tools}

        You must always select one or more of the above tools and answer with only a list of JSON objects matching the following schema:

        ```json
        [{{
        "tool": <name of the selected tool>,
        "tool_input": <parameters for the selected tool, matching the tool's JSON schema>
        }}]
        ```

        Think step by step
        Do not call a tool if the input depends on another tool call output that you do not have yet, you will have multiple turns to accomplish the task.
        In each turn call the next tool indicating when is needed the relevant information in the tool arguments, remember that tools are not able to see the history of previous tool executions or your reasoning steps 
        Do not try to answer until you get all the tools output, if you do not have an answer yet, you can continue calling tools until you do.
        Your answer should be in the same language as the initial query.

        """


    SQL docstring:
        """query generation and execution tool. Use this to retrieve the results from a database.
        Do not pass SQL queries directly and Do not ask for the SQL commands.
        Input must be a natural language question or instruction.
        Only send one instruction at the time. this tool must not be called more than once in one turn"""

    SQL prompt:

        """<|begin_of_text|><|start_header_id|>system<|end_header_id|> 
        
        Table info: 
        {table_info}
        
        Generate a query using valid SQLite to answer the following questions for the summarized tables schemas provided above.
        Do not assume the values on the database tables before generating the SQL query, always generate a SQL that query what is asked. 
        The query must be in the format: ```sql\nquery\n```
        
        Example:
        
        ```sql
        SELECT * FROM mainTable;
        ```
        
        Don't use information of the rows of table info you were provided some example rows to understand the schema, not the actual values in the db  so always execute query to find values if needed
        When inserting only pass the asked values do not auto fill unknown values, unless are required, 
        If a current table value is unknown do the query to get information before generating another query 
        Limit the results to 10 unless something else is specified  
        
        <|eot_id|><|start_header_id|>user<|end_header_id|>\
            
        {input}
        <|eot_id|><|start_header_id|>assistant<|end_header_id|>""" 


best working bela examples not with music one

    PROMPT

        """you are an helpful assistant and you have access to the following tools:

        {tools}

        You must always select one or more of the above tools and answer with only a list of JSON objects matching the following schema:

        ```json
        [{{
        "tool": <name of the selected tool>,
        "tool_input": <parameters for the selected tool, matching the tool's JSON schema>
        }}]
        ```

        Think step by step
        Do not call a tool if the input depends on another tool call output that you do not have yet, you will have multiple turn to polish your answer.
        In each turn call the next tool indicating when is needed the relevant information in tool arguments, remember that each tool is not able to see the history of reasoning or tool execution 
        Do not try to answer until you get all the tools output, if you do not have an answer yet, you can continue calling tools until you do.
        Your answer should be in the same language as the initial query.

        """


    SQL docstring:

        """query generation tool. Use this to generate sql queries and retrieve the results from a database.
        Do not pass sql queries directly. Input must be a natural language question or instruction.
        Only send one instruction at the time. this tool must not be called more than once in one turn"""

    SQL prompt:

        """<|begin_of_text|><|start_header_id|>system<|end_header_id|> 
        
        Table info: 
        {table_info}
        
        Generate a query using valid SQLite to answer the following questions for the summarized tables schemas provided above.
        Do not assume the values on the database tables before generating the SQL query, always generate a SQL that query what is asked. 
        The query must be in the format: ```sql\nquery\n```
        
        Example:
        
        ```sql
        SELECT * FROM mainTable;
        ```
        
        You can only execute one statement at a time. DO NOT GENERATE MORE THAN ONE SQL statement at a time, you will have extra turns to execute new SQL statements
        Don't use information of the rows of table info you were provided some example rows to understand the schema, not the actual values in the db  so always execute query to find values if needed
        When inserting only pass the asked values do not auto fill unknown values, unless are required, 
        If a current table value is unknown do the query to get information before generating another query 
        Limit the results to 10 unless something else is specified  
        
        <|eot_id|><|start_header_id|>user<|end_header_id|>\
            
        {input}
        <|eot_id|><|start_header_id|>assistant<|end_header_id|>""" 

base working well with music db:

    PROMPT

        """you are an helpful assistant and you have access to the following tools:

        {tools}

        You must always select one or more of the above tools and answer with only a list of JSON objects matching the following schema:

        ```json
        [{{
        "tool": <name of the selected tool>,
        "tool_input": <parameters for the selected tool, matching the tool's JSON schema>
        }}]
        ```

        Think step by step
        Do not call a tool if the input depends on another tool output that you do not have yet.
        Do not try to answer until you get all the tools output, if you do not have an answer yet, you can continue calling tools until you do.
        Your answer should be in the same language as the initial query.

        """ 

    SQL docstring:

         """query generation tool. Use this to generate sql queries and retrieve the results from a database.
         Do not pass sql queries directly. Input must be a natural language question or instruction."""

    SQL prompt:

        """<|begin_of_text|><|start_header_id|>system<|end_header_id|> 
        
        {table_info}
        
        Generate a query using valid SQLite to answer the following questions for the summarized tables schemas provided above.
        Do not assume the values on the database tables before generating the SQL query, always generate a SQL that query what is asked. 
        The query must be in the format: ```sql\nquery\n```
        
        Example:
        
        ```sql
        SELECT * FROM mainTable;
        ```
        
        <|eot_id|><|start_header_id|>user<|end_header_id|>\
            
        {input}
        <|eot_id|><|start_header_id|>assistant<|end_header_id|>"""